from pico2d import *

import Class_Mario
import Class_Back_Ground
import Class_Exit

mario       = None
Marios      = None
press_start = None
back_ground = None
exits       = None
logo        = None

class Press_Start:
    def __init__(self):
        self.Press_C = load_image('Press_C_Start.png')
        self.Print = False
        self.Count = 0

    def draw(self):
        if self.Print :
            self.Press_C.draw(481,300)

    def update(self) :
        if self.Print == False :
            self.Count += 1
            if self.Count == 15 :
                self.Print = True
                self.Count = 0

        elif self.Print == True :
            self.Count += 1
            if self.Count == 15:
                self.Print = False
                self.Count = 0

class Logo:
    def __init__(self):
        self.image_logo = load_image('Main_Rogo.png')

    def draw(self):
        self.image_logo.draw(481,530)


def UPDATE():
    global press_start , Marios
    press_start.update()
    JUMP()
    for Mario in Marios :
        Mario.update()
        Class_Mario.Block(Mario, Marios)



def DRAW():
    global exits , press_start , back_ground , Marios , logo
    back_ground.draw()
    press_start.draw()
    exits.draw()
    for Mario in Marios:
        Mario.draw()
    logo.draw()
    update_canvas()

def JUMP():
    global Marios
    for mario in Marios:
        down = 0
        Jerge_down = False
        if mario.Y >= 244:
            for MARIO in Marios:
                if (mario.X < MARIO.X + 26 and mario.X > MARIO.X - 26) :
                    if mario.Y - 25 > MARIO.Y + 25:
                        down += 1
                    else:
                        Jerge_down = True

                else :
                    down += 1

            if (down , mario.Jump) == (5 , mario.Jump_None):
                mario.Jump = mario.Jump_Down
                mario.Jump_State = 1
                mario.State = 3

        if mario.Jump == mario.Jump_Up:
            if mario.Jump_State == 0 :
                mario.Jump = mario.Jump_Down
            mario.Y = mario.Y + mario.Jump_State ** 2
            mario.Jump_State += 1

        if mario.Jump == mario.Jump_Down:
            mario.Y = mario.Y - mario.Jump_State ** 2
            mario.Jump_State += 1

        if mario.Y < 194 :
            mario.Y = 194
            mario.Jump = mario.Jump_None
            mario.Jump_State = 0
            if mario.Move == True :
                mario.State = 1
            else :
                mario.State = 0


def handle_events():
    global running
    global Marios
    events = get_events()
    for event in events:
        if event.type == SDL_QUIT:
            running = False
        else :
            for mario in Marios :
                mario.Handle_Event(event)

def main() :

    open_canvas(962,700)


    global mario , Marios , press_start , back_ground , exits , logo , running

    running = True
    Marios = Class_Mario.Create_Marios()
    exits = Class_Exit.Exit()
    press_start = Press_Start()
    back_ground = Class_Back_Ground.Back_Ground()
    logo = Logo()

    while(running):
        handle_events()
        UPDATE()
        DRAW()
        delay(0.02)

    close_canvas()

if __name__ == '__main__':
    main()